O – Принцип Открыт-Закрыт 


Определение: Программные сущности (классы, модули, функции и т.п.) должны быть
открытыми для расширения, но закрытыми для модификации.

 
Смысл: ограничить распространение изменений минимальным числом классов/модулей; 
позволить вести параллельную разработку путем фиксации интерфейсов классов и открытости реализаций. 


Краткое описание: закрытость модулей означает стабильность интерфейса и возможность
использования классов/модулей клиентами. Открытость модулей означает возможность 
внесения изменений в поведении, путем изменения реализации или же путем 
переопределения поведения в наследниках. Борьба с изменениями заключается в ограничении 
количества изменений минимальным числом классов/модулей и не подразумевает возможность 
изменения поведения без перекомпиляции. На практике требуемая «гибкость» обеспечивается 
за счет наследования и сопоставления с образцом (pattern matching), 
в зависимости от того, какую операцию мы хотим упростить – добавление 
нового подтипа в иерархию наследования или добавление новой операции в семейство типов. 
Типичные примеры нарушения: размазывание информации об иерархии типов по всему приложению. 

Anti-OCP – Принцип фабрики-фабрик: Чрезмерная любовь к OCP ведет к переусложненным решениям
с чрезмерным числом уровней абстракции. 